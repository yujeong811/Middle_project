package kr.or.ddit.bnb.member.service;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.junit.jupiter.api.Test;

import com.ibatis.sqlmap.client.SqlMapClient;

import kr.or.ddit.bnb.member.dao.MemberDaoImpl;
import kr.or.ddit.bnb.member.vo.FavorListVO;
import kr.or.ddit.bnb.member.vo.MemberVO;
import kr.or.ddit.bnb.member.vo.ReserDetailVO;
import kr.or.ddit.bnb.member.vo.ReserListVO;
import kr.or.ddit.util.SqlMapClientFactory;

public class MemberServiceImpl implements IMemberService {
	private MemberDaoImpl dao;  
	private static MemberServiceImpl memService;
	private SqlMapClient smc;

	public MemberServiceImpl() {
		dao = MemberDaoImpl.getInstance();
		smc = SqlMapClientFactory.getsqlMapClient();
	} 
	
	public static IMemberService getInstance() {
		if(memService==null) memService = new MemberServiceImpl();
		return memService;
	}
	
	@Override
	public int insertMember(MemberVO memVo) {
		int cnt = 0;
		try {
			cnt = dao.insertMember(smc, memVo);
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return cnt;
	}

	@Override
	public MemberVO getMember(MemberVO memVo) {
		MemberVO memVO = null;
		
		try {
			memVO = dao.getMember(smc, memVo);
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return memVO;
	}

	@Override
	public String findId(MemberVO memVo) {
		String memId = null;
		
		try {
			memId = dao.findId(smc, memVo);
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
		return memId;
	}

	@Override
	public MemberVO findPass(MemberVO memVo) {
		MemberVO memVO = null;
		
		try {
			memVO = dao.findPass(smc, memVo);
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
		return memVO;
	}

	@Override
	public int idCheck(String memId) {
		int cnt = 0;
		
		try {
			cnt = dao.idCheck(smc, memId);
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return cnt;	
	}

	@Override
	public int updatePass(String memPass) {
		int cnt = 0;
		
		try {
			cnt = dao.updatePass(smc, memPass);
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return cnt;
	}

	@Override
	public MemberVO getMemberList(String memId) {
		MemberVO memVO = null;
		
		try {
			memVO = dao.getMemberList(smc, memId);
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
		return memVO;
	}

	@Override
	public int deleteMember(String memId) {
		int cnt = 0;
		
		try {
			cnt = dao.deleteMember(smc, memId);
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return cnt;
	}

	@Override
	public int updateMember(MemberVO memVo) {
		int cnt = 0;
		
		try {
			cnt = dao.updateMember(smc, memVo);
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return cnt;
	}

	@Override
	public ReserDetailVO reserDetail(Map<String, Object> resMap) {
		ReserDetailVO reserDeVo = null;
		
		try {
			reserDeVo = dao.reserDetail(smc, resMap);
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
		return reserDeVo;
	}

	@Override
	public List<ReserListVO> reserList(String memId) {
		List<ReserListVO> reserLiVo = new ArrayList<ReserListVO>();
		List<ReserListVO> temp = null;
		List<String> linkList = null;
		
		try {
			temp = (List<ReserListVO>) dao.reserList(smc, memId);
//			System.out.println(memId + "가 예약한 내역 : " + temp);
			for(ReserListVO vo : temp) {		
				linkList = dao.getImg(smc, memId);
				vo.setImg_link(linkList);
				reserLiVo.add(vo);
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
		return reserLiVo;
	}
	
	@Override
	public List<String> getImg(String prod_id) {
		List<String> list = null;
		
		try {
			list = dao.getImg(smc, prod_id);
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
		return list;
	}

	@Override
	public int deleteReser(Map<String, Object> resDMap) {
		int cnt = 0;
	
		try {
			resDMap.put("reser_stat", "결제전");
			cnt = dao.deleteReser(smc, resDMap);
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return cnt;
	}

	@Override
	public FavorListVO favorList(String memId) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public int deleteFavor(Map<String, Object> resfMap) {
		int cnt = 0;
		
		try {
			cnt = dao.deleteFavor(smc, resfMap);
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return cnt;
	}
	
}
