package kr.or.ddit.bnb.admin.service;

import java.sql.SQLException;
import java.util.List;
import java.util.Map;

import com.ibatis.sqlmap.client.SqlMapClient;

import kr.or.ddit.bnb.admin.dao.IManagementDao;
import kr.or.ddit.bnb.admin.dao.ManagementDao;
import kr.or.ddit.bnb.admin.vo.BuyerVO;
import kr.or.ddit.bnb.admin.vo.HostVO;
import kr.or.ddit.bnb.admin.vo.PickBuyerVO;
import kr.or.ddit.bnb.admin.vo.PickHostVO;
import kr.or.ddit.util.SqlMapClientFactory;

public class ManagementService implements IManagementService{
	private IManagementDao dao;
	private SqlMapClient smc;
	
	private static ManagementService service1;
	
	private ManagementService() {
		dao = ManagementDao.getInstance();
		smc = SqlMapClientFactory.getsqlMapClient();
		
	}
	public static ManagementService getInstance() {
		if(service1==null) service1 = new ManagementService();
		return service1;
	}

	@Override
	public List<HostVO> getHostList() {
		List<HostVO> hostList = null;
		try {
			hostList = dao.getHostList(smc);
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return hostList;
	}


	@Override
	public int deleteHost(String host_id) {
		int hostId = 0;
		try {
			hostId = dao.deleteHost(smc, host_id);
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return hostId;
	}
	

	
	@Override
	public List<BuyerVO> getBuyerList() {
		List<BuyerVO> buyerList = null;
		try {
			buyerList = dao.getBuyerList(smc);
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return buyerList;
	}
	


	@Override
	public int deleteBuyer(String sche_id) {
		int sche_Id = 0;
		try {
			sche_Id = dao.deleteBuyer(smc, sche_id);
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return sche_Id;
	}
	@Override
	public List<PickBuyerVO> getBuyer() {
		List<PickBuyerVO> buyer_info =null;
		try {
			buyer_info = dao.getBuyer(smc);
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return buyer_info;
	}
	@Override
	public List<PickHostVO> getHost() {
		List<PickHostVO> host_info = null;
		try {
			host_info = dao.getHost(smc);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return host_info;
	}
}
